<!doctype html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, user-scalable=no" >
        <meta http-equiv="X-UA-Compatible" content="ie=edge">
        <title>Go Chat</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
        <style>
            .chats {
                outline: 1px solid silver;
                min-height: 160px;
                padding: 10px;
            }
        </style>
    </head>
<body>

    <div class="container">
        <p class="lead">
        <h2>Chat App</h2>
        </p>
    </div>
    
    <hr>

    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <h2>Chat</h2>

                <input type="hidden" name="action" id="action">

                <div class="form-group">
                    <label for="name" class="form-label">Name</label>
                    <input type="text" id="name" class="form-control" aria-describedby="userHelpBlock">
                    <div id="userHelpBlock" class="form-text">
                    Enter Your Chat Name
                    </div>
                </div>

                
                <div class="form-group">
                    <label for="message" class="form-label">Message</label>
                    <input type="text" id="message" class="form-control" aria-describedby="messageHelpBlock">
                    <div id="messageHelpBlock" class="form-text">
                    Type your message here
                    </div>
                </div>

                <hr>


                <div id="chats" class="chats">
                </div>
            </div>
            <div class="col-md-4">
                <h2>Who's Online</h2>

                <ul id="online_users">
                </ul>
            </div>
        </div>
        
    </div>
</body>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>

<script>
    let socket = null;
    let chatbox = document.getElementById("chats")
    let name = document.getElementById("name")
    let message = document.getElementById("message")

    window.onbeforeunload = () =>{
        console.log("leaving");
        let jsonData = {};
        jsonData["action"] = "left";
        socket.send(JSON.stringify(jsonData))
    }

    document.addEventListener("DOMContentLoaded", function(){
        socket = new WebSocket("ws://127.0.0.1:8080/ws");

        socket.onopen = () => {
            console.log("Successfully Connected to WebSocket");
        }

        socket.onclose = () => {
            console.log("Connection Closed")
        }

        socket.onerror = (error) =>{
            console.log("Error found")
        }


        socket.onmessage = (message) => {
            console.log(message)

            let data = JSON.parse(message.data);

            switch (data.action) {
                case "list_users":
                    let ul = document.getElementById("online_users");
                    while (ul.firstChild) ul.removeChild(ul.firstChild);

                    if (data.connected_users.length > 0){
                        data.connected_users.forEach(function(item){
                            let li = document.createElement("li")
                            li.appendChild(document.createTextNode(item))
                            ul.appendChild(li)
                        })
                    }
                    break;

                case "broadcast":
                    chatbox.innerHTML = chatbox.innerHTML + data.message + "<br>"
                    break;

            }
        }

        
        name.addEventListener("change", function(){
            let jsonData = {};
            jsonData["action"] = "user";
            jsonData["user"] = this.value;
            socket.send(JSON.stringify(jsonData));
        });


        message.addEventListener("keydown", function(event){
            if (event.code === "Enter"){
                if(!socket){
                    console.log("No Connection")
                    return false
                }

                event.preventDefault();
                event.stopPropagation();

                if((name.value === "") || (message.value === "")){
                    alert("Enter Username or Message")
                    return false
                }else{
                    sendMessage()
                }

                
            }
        })

        
    })


    function sendMessage(){
        let jsonData = {};
        jsonData.action = "broadcast";
        jsonData.user = name.value;
        jsonData.message = message.value;

        socket.send(JSON.stringify(jsonData))
        document.getElementById("message").value = "";
    }
</script>
</html>